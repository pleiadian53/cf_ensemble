
# Check points to see if improved 

# 1. 
# X_test now carries adjusted labels; how do they compare to the original heuristic?
    print(f"> L_heuristic |     f1: {f1_score(L_test, y_pred)}, balanced acc: {balanced_accuracy_score(L_test, y_pred)}")
    print(f"> L_heuristic_adj | f1: {f1_score(L_test, y_pred_adj)}, balanced acc: {balanced_accuracy_score(L_test, y_pred_adj)}")

# 2. evalulate_filter() 
     Pre-CF performance comparison

# 3. last part: evaluating the new matrix

# Tips 
  1. include label in seq2seq model has benefits
      + if not, the seq2seq model's accuracy is not good 
           PREDICTION ACCURACY (%):
           Train: 88.619, Test: 50.224
         + also the gap between Ein and Eout is bigger
      
      > but can we avoid havin to estimate T's labels? 
  


# how to optimize the probability thresholds? 

[0.499 0.    0.008 0.    0.006]  ... fmax
[0.501 0.493 0.234 0.    0.007]  ... balanced acc
Counter({1: 3710, 0: 40})  ... fmax                  # <<< too many positives? 
Counter({0: 3005, 1: 745})  ... balanced acc 


# stacked LSTM vs attention-based encoder decoder 


+ attention 

================================================================================
Guesstimated labeling (on T) via seq2seq-based polarity model model
================================================================================
> Labeling accuracy: 0.7104 (it's okay for this to be relatively low)
> Reliable-to-correct ratio: 0.43696
> Precision: 0.43695993008641115, Recall: 0.9999996338338946
> Predcitio(TP): 0.06431998970880165, Recall(TP): 0.9999975124439989 => f1(TP): 0.12086586865127219
> Error rate: 9.008637117235891e-05
================================================================================
Guesstimated labeling (on T) via MAJORITY VOTE
================================================================================
> Labeling accuracy: 0.324
> Reliable-to-correct ratio: 0.324
> Precision: 0.314086532083989, Recall: 0.4621016250085591
> P(TP|reliable): 0.07914383296569612, Recall(TP): 0.7910428083512231 => f1(TP): 0.14389133760572956
> Error rate: 0.00017071006678097718

+ stacked LSTM
================================================================================
Guesstimated labeling (on T) via seq2seq-based polarity model model
================================================================================
> Labeling accuracy: 0.7784 (it's okay for this to be relatively low)
> Reliable-to-correct ratio: 0.43248
> Precision: 0.43247993080321107, Recall: 0.9999996300408324
> Predcitio(TP): 0.0660799894272017, Recall(TP): 0.9999975786983567 => f1(TP): 0.12396814528946565
> Error rate: 9.080317094298297e-05
================================================================================
Guesstimated labeling (on T) via MAJORITY VOTE
================================================================================
> Labeling accuracy: 0.304
> Reliable-to-correct ratio: 0.304
> Precision: 0.29550526558101176, Recall: 0.44025140945193875
> P(TP|reliable): 0.0856716946432345, Recall(TP): 0.8353490669514118 => f1(TP): 0.15540533540300205
> Error rate: 0.00017494271446548824



# seq2seq training data: zero-padding vs using heuristic for the labeling position

+ zero-padding

Conflict in reliability matrix estimate: 14274 entries are different
Error rate: 0.76128
[info] n_reliable: 10658, n_unreliable: 14342
       r_reliable: 0.42632, r_unreliable: 0.57368
[info] Reliability threshold: [0.098 0.084 0.077 0.092 0.064]

================================================================================
Guesstimated labeling (on T) via seq2seq-based polarity model model
================================================================================
> Labeling accuracy: 0.1072 (it's okay for this to be relatively low)
> Reliable-to-correct ratio: 0.38832
> Precision: 0.3883199378688099, Recall: 0.9999995879688554
> Predcitio(TP): 0.07183998850560183, Recall(TP): 0.9999977728334681 => f1(TP): 0.13404981816694486
> Error rate: 9.78687686819915e-05
================================================================================
Guesstimated labeling (on T) via MAJORITY VOTE
================================================================================
> Labeling accuracy: 0.1488
> Reliable-to-correct ratio: 0.1488
> Precision: 0.14848113038125627, Recall: 0.251751029356807
> Predcition(TP): 0.10716886824571853, Recall(TP): 0.9821804405780834 => f1(TP): 0.193251449057209
> Error rate: 0.00020693035715068769


+ majority vote 

Conflict in reliability matrix estimate: 12821 entries are different
Error rate: 0.6837866666666667
[info] n_reliable: 12074, n_unreliable: 12926
       r_reliable: 0.48296, r_unreliable: 0.51704
[info] Reliability threshold: [0.094 0.089 0.069 0.069 0.062]

================================================================================
Guesstimated labeling (on T) via seq2seq-based polarity model model
================================================================================
> Labeling accuracy: 0.1088
> Reliable-to-correct ratio: 0.44912
> Precision: 0.4491199281408115, Recall: 0.9999996437479003
> Predcitio(TP): 0.06303998991360162, Recall(TP): 0.9999974619353759 => f1(TP): 0.11860321535122957
> Error rate: 8.814077179495075e-05
================================================================================
Guesstimated labeling (on T) via MAJORITY VOTE
================================================================================
> Labeling accuracy: 0.3568
> Reliable-to-correct ratio: 0.3568
> Precision: 0.3478805247352584, Recall: 0.49412166222954673
> Predcition(TP): 0.0737396353800764, Recall(TP): 0.7461909995152297 => f1(TP): 0.13421587116372008
> Error rate: 0.00016356133957569994




# Conflict in reliability matrix is too HIGH


+ [info] loss_fn_name:

what if: r_th_i = Pr[i][ M[i] == 1 ].min()? 



r_th_i = Pr[i][ M[i] == 1 ].mean()

> shape(P_test): (6, 1250), shape(P_train): (6, 3750)
> `include_label` set to True => last row holds the (true) class labels for R and estimated labels for T ...
> reliablity threshold for class label in training set: 0.9998739957809448
Conflict in reliability matrix estimate: 10558 entries are different
Error rate: 0.5630933333333333
[info] Reliability threshold: [0.999 1.    0.826 0.062 0.115]



### Errors 

ImportError: 
The plotly.plotly module is deprecated,
please install the chart-studio package and use the
chart_studio.plotly module instead. 

